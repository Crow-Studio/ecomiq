/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as DashboardRouteRouteImport } from "./routes/dashboard/route";
import { Route as AuthRouteRouteImport } from "./routes/auth/route";
import { Route as DashboardIndexRouteImport } from "./routes/dashboard/index";
import { Route as homeIndexRouteImport } from "./routes/(home)/index";
import { Route as AuthSignupRouteImport } from "./routes/auth/signup";
import { Route as AuthSigninRouteImport } from "./routes/auth/signin";
import { ServerRoute as ApiOauthSigninGoogleIndexServerRouteImport } from "./routes/api/oauth/signin/google/index";
import { ServerRoute as ApiOauthSigninGoogleCallbackIndexServerRouteImport } from "./routes/api/oauth/signin/google/callback/index";

const rootServerRouteImport = createServerRootRoute();

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const homeIndexRoute = homeIndexRouteImport.update({
  id: "/(home)/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => AuthRouteRoute,
} as any);
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: "/signin",
  path: "/signin",
  getParentRoute: () => AuthRouteRoute,
} as any);
const ApiOauthSigninGoogleIndexServerRoute =
  ApiOauthSigninGoogleIndexServerRouteImport.update({
    id: "/api/oauth/signin/google/",
    path: "/api/oauth/signin/google/",
    getParentRoute: () => rootServerRouteImport,
  } as any);
const ApiOauthSigninGoogleCallbackIndexServerRoute =
  ApiOauthSigninGoogleCallbackIndexServerRouteImport.update({
    id: "/api/oauth/signin/google/callback/",
    path: "/api/oauth/signin/google/callback/",
    getParentRoute: () => rootServerRouteImport,
  } as any);

export interface FileRoutesByFullPath {
  "/auth": typeof AuthRouteRouteWithChildren;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/auth/signin": typeof AuthSigninRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/": typeof homeIndexRoute;
  "/dashboard/": typeof DashboardIndexRoute;
}
export interface FileRoutesByTo {
  "/auth": typeof AuthRouteRouteWithChildren;
  "/auth/signin": typeof AuthSigninRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/": typeof homeIndexRoute;
  "/dashboard": typeof DashboardIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/auth": typeof AuthRouteRouteWithChildren;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/auth/signin": typeof AuthSigninRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/(home)/": typeof homeIndexRoute;
  "/dashboard/": typeof DashboardIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/auth"
    | "/dashboard"
    | "/auth/signin"
    | "/auth/signup"
    | "/"
    | "/dashboard/";
  fileRoutesByTo: FileRoutesByTo;
  to: "/auth" | "/auth/signin" | "/auth/signup" | "/" | "/dashboard";
  id:
    | "__root__"
    | "/auth"
    | "/dashboard"
    | "/auth/signin"
    | "/auth/signup"
    | "/(home)/"
    | "/dashboard/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren;
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren;
  homeIndexRoute: typeof homeIndexRoute;
}
export interface FileServerRoutesByFullPath {
  "/api/oauth/signin/google": typeof ApiOauthSigninGoogleIndexServerRoute;
  "/api/oauth/signin/google/callback": typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}
export interface FileServerRoutesByTo {
  "/api/oauth/signin/google": typeof ApiOauthSigninGoogleIndexServerRoute;
  "/api/oauth/signin/google/callback": typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport;
  "/api/oauth/signin/google/": typeof ApiOauthSigninGoogleIndexServerRoute;
  "/api/oauth/signin/google/callback/": typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath;
  fullPaths: "/api/oauth/signin/google" | "/api/oauth/signin/google/callback";
  fileServerRoutesByTo: FileServerRoutesByTo;
  to: "/api/oauth/signin/google" | "/api/oauth/signin/google/callback";
  id:
    | "__root__"
    | "/api/oauth/signin/google/"
    | "/api/oauth/signin/google/callback/";
  fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
  ApiOauthSigninGoogleIndexServerRoute: typeof ApiOauthSigninGoogleIndexServerRoute;
  ApiOauthSigninGoogleCallbackIndexServerRoute: typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/dashboard": {
      id: "/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth": {
      id: "/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/dashboard/": {
      id: "/dashboard/";
      path: "/";
      fullPath: "/dashboard/";
      preLoaderRoute: typeof DashboardIndexRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/(home)/": {
      id: "/(home)/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof homeIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth/signup": {
      id: "/auth/signup";
      path: "/signup";
      fullPath: "/auth/signup";
      preLoaderRoute: typeof AuthSignupRouteImport;
      parentRoute: typeof AuthRouteRoute;
    };
    "/auth/signin": {
      id: "/auth/signin";
      path: "/signin";
      fullPath: "/auth/signin";
      preLoaderRoute: typeof AuthSigninRouteImport;
      parentRoute: typeof AuthRouteRoute;
    };
  }
}
declare module "@tanstack/react-start/server" {
  interface ServerFileRoutesByPath {
    "/api/oauth/signin/google/": {
      id: "/api/oauth/signin/google/";
      path: "/api/oauth/signin/google";
      fullPath: "/api/oauth/signin/google";
      preLoaderRoute: typeof ApiOauthSigninGoogleIndexServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/oauth/signin/google/callback/": {
      id: "/api/oauth/signin/google/callback/";
      path: "/api/oauth/signin/google/callback";
      fullPath: "/api/oauth/signin/google/callback";
      preLoaderRoute: typeof ApiOauthSigninGoogleCallbackIndexServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
  }
}

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute;
  AuthSignupRoute: typeof AuthSignupRoute;
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
};

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
);

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute;
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
};

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  homeIndexRoute: homeIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiOauthSigninGoogleIndexServerRoute: ApiOauthSigninGoogleIndexServerRoute,
  ApiOauthSigninGoogleCallbackIndexServerRoute:
    ApiOauthSigninGoogleCallbackIndexServerRoute,
};
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>();
