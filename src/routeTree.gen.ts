/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";
import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as homeIndexRouteImport } from "./routes/(home)/index";
import { Route as AuthAuthLayoutRouteImport } from "./routes/auth/_auth-layout";
import { Route as UserUserIdMyStoresLayoutRouteImport } from "./routes/user/$userId/_my-stores-layout";
import { Route as UserUserIdBillingLayoutRouteImport } from "./routes/user/$userId/_billing-layout";
import { Route as AuthAuthLayoutSignupRouteImport } from "./routes/auth/_auth-layout/signup";
import { Route as AuthAuthLayoutSigninRouteImport } from "./routes/auth/_auth-layout/signin";
import { Route as AuthAuthLayoutForgotPasswordRouteImport } from "./routes/auth/_auth-layout/forgot-password";
import { Route as UserUserIdMyStoresLayoutMyStoresRouteImport } from "./routes/user/$userId/_my-stores-layout/my-stores";
import { Route as UserUserIdBillingLayoutBillingRouteImport } from "./routes/user/$userId/_billing-layout/billing";
import { Route as UserUserIdStoreStoreIdStoreLayoutsRouteImport } from "./routes/user/$userId/store/$storeId/_store-layouts";
import { Route as UserUserIdStoreStoreIdStoreLayoutsDashboardRouteImport } from "./routes/user/$userId/store/$storeId/_store-layouts/dashboard";
import { ServerRoute as ApiOauthSigninGoogleIndexServerRouteImport } from "./routes/api/oauth/signin/google/index";
import { ServerRoute as ApiOauthSigninGoogleCallbackIndexServerRouteImport } from "./routes/api/oauth/signin/google/callback/index";

const AuthRouteImport = createFileRoute("/auth")();
const UserUserIdRouteImport = createFileRoute("/user/$userId")();
const UserUserIdStoreStoreIdRouteImport = createFileRoute(
  "/user/$userId/store/$storeId",
)();
const rootServerRouteImport = createServerRootRoute();

const AuthRoute = AuthRouteImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRouteImport,
} as any);
const UserUserIdRoute = UserUserIdRouteImport.update({
  id: "/user/$userId",
  path: "/user/$userId",
  getParentRoute: () => rootRouteImport,
} as any);
const homeIndexRoute = homeIndexRouteImport.update({
  id: "/(home)/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthAuthLayoutRoute = AuthAuthLayoutRouteImport.update({
  id: "/_auth-layout",
  getParentRoute: () => AuthRoute,
} as any);
const UserUserIdMyStoresLayoutRoute =
  UserUserIdMyStoresLayoutRouteImport.update({
    id: "/_my-stores-layout",
    getParentRoute: () => UserUserIdRoute,
  } as any);
const UserUserIdBillingLayoutRoute = UserUserIdBillingLayoutRouteImport.update({
  id: "/_billing-layout",
  getParentRoute: () => UserUserIdRoute,
} as any);
const AuthAuthLayoutSignupRoute = AuthAuthLayoutSignupRouteImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => AuthAuthLayoutRoute,
} as any);
const AuthAuthLayoutSigninRoute = AuthAuthLayoutSigninRouteImport.update({
  id: "/signin",
  path: "/signin",
  getParentRoute: () => AuthAuthLayoutRoute,
} as any);
const AuthAuthLayoutForgotPasswordRoute =
  AuthAuthLayoutForgotPasswordRouteImport.update({
    id: "/forgot-password",
    path: "/forgot-password",
    getParentRoute: () => AuthAuthLayoutRoute,
  } as any);
const UserUserIdStoreStoreIdRoute = UserUserIdStoreStoreIdRouteImport.update({
  id: "/store/$storeId",
  path: "/store/$storeId",
  getParentRoute: () => UserUserIdRoute,
} as any);
const UserUserIdMyStoresLayoutMyStoresRoute =
  UserUserIdMyStoresLayoutMyStoresRouteImport.update({
    id: "/my-stores",
    path: "/my-stores",
    getParentRoute: () => UserUserIdMyStoresLayoutRoute,
  } as any);
const UserUserIdBillingLayoutBillingRoute =
  UserUserIdBillingLayoutBillingRouteImport.update({
    id: "/billing",
    path: "/billing",
    getParentRoute: () => UserUserIdBillingLayoutRoute,
  } as any);
const UserUserIdStoreStoreIdStoreLayoutsRoute =
  UserUserIdStoreStoreIdStoreLayoutsRouteImport.update({
    id: "/_store-layouts",
    getParentRoute: () => UserUserIdStoreStoreIdRoute,
  } as any);
const UserUserIdStoreStoreIdStoreLayoutsDashboardRoute =
  UserUserIdStoreStoreIdStoreLayoutsDashboardRouteImport.update({
    id: "/dashboard",
    path: "/dashboard",
    getParentRoute: () => UserUserIdStoreStoreIdStoreLayoutsRoute,
  } as any);
const ApiOauthSigninGoogleIndexServerRoute =
  ApiOauthSigninGoogleIndexServerRouteImport.update({
    id: "/api/oauth/signin/google/",
    path: "/api/oauth/signin/google/",
    getParentRoute: () => rootServerRouteImport,
  } as any);
const ApiOauthSigninGoogleCallbackIndexServerRoute =
  ApiOauthSigninGoogleCallbackIndexServerRouteImport.update({
    id: "/api/oauth/signin/google/callback/",
    path: "/api/oauth/signin/google/callback/",
    getParentRoute: () => rootServerRouteImport,
  } as any);

export interface FileRoutesByFullPath {
  "/auth": typeof AuthAuthLayoutRouteWithChildren;
  "/": typeof homeIndexRoute;
  "/auth/forgot-password": typeof AuthAuthLayoutForgotPasswordRoute;
  "/auth/signin": typeof AuthAuthLayoutSigninRoute;
  "/auth/signup": typeof AuthAuthLayoutSignupRoute;
  "/user/$userId": typeof UserUserIdMyStoresLayoutRouteWithChildren;
  "/user/$userId/billing": typeof UserUserIdBillingLayoutBillingRoute;
  "/user/$userId/my-stores": typeof UserUserIdMyStoresLayoutMyStoresRoute;
  "/user/$userId/store/$storeId": typeof UserUserIdStoreStoreIdStoreLayoutsRouteWithChildren;
  "/user/$userId/store/$storeId/dashboard": typeof UserUserIdStoreStoreIdStoreLayoutsDashboardRoute;
}
export interface FileRoutesByTo {
  "/auth": typeof AuthAuthLayoutRouteWithChildren;
  "/": typeof homeIndexRoute;
  "/auth/forgot-password": typeof AuthAuthLayoutForgotPasswordRoute;
  "/auth/signin": typeof AuthAuthLayoutSigninRoute;
  "/auth/signup": typeof AuthAuthLayoutSignupRoute;
  "/user/$userId": typeof UserUserIdMyStoresLayoutRouteWithChildren;
  "/user/$userId/billing": typeof UserUserIdBillingLayoutBillingRoute;
  "/user/$userId/my-stores": typeof UserUserIdMyStoresLayoutMyStoresRoute;
  "/user/$userId/store/$storeId": typeof UserUserIdStoreStoreIdStoreLayoutsRouteWithChildren;
  "/user/$userId/store/$storeId/dashboard": typeof UserUserIdStoreStoreIdStoreLayoutsDashboardRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/auth": typeof AuthRouteWithChildren;
  "/auth/_auth-layout": typeof AuthAuthLayoutRouteWithChildren;
  "/(home)/": typeof homeIndexRoute;
  "/auth/_auth-layout/forgot-password": typeof AuthAuthLayoutForgotPasswordRoute;
  "/auth/_auth-layout/signin": typeof AuthAuthLayoutSigninRoute;
  "/auth/_auth-layout/signup": typeof AuthAuthLayoutSignupRoute;
  "/user/$userId": typeof UserUserIdRouteWithChildren;
  "/user/$userId/_billing-layout": typeof UserUserIdBillingLayoutRouteWithChildren;
  "/user/$userId/_my-stores-layout": typeof UserUserIdMyStoresLayoutRouteWithChildren;
  "/user/$userId/_billing-layout/billing": typeof UserUserIdBillingLayoutBillingRoute;
  "/user/$userId/_my-stores-layout/my-stores": typeof UserUserIdMyStoresLayoutMyStoresRoute;
  "/user/$userId/store/$storeId": typeof UserUserIdStoreStoreIdRouteWithChildren;
  "/user/$userId/store/$storeId/_store-layouts": typeof UserUserIdStoreStoreIdStoreLayoutsRouteWithChildren;
  "/user/$userId/store/$storeId/_store-layouts/dashboard": typeof UserUserIdStoreStoreIdStoreLayoutsDashboardRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/auth"
    | "/"
    | "/auth/forgot-password"
    | "/auth/signin"
    | "/auth/signup"
    | "/user/$userId"
    | "/user/$userId/billing"
    | "/user/$userId/my-stores"
    | "/user/$userId/store/$storeId"
    | "/user/$userId/store/$storeId/dashboard";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/auth"
    | "/"
    | "/auth/forgot-password"
    | "/auth/signin"
    | "/auth/signup"
    | "/user/$userId"
    | "/user/$userId/billing"
    | "/user/$userId/my-stores"
    | "/user/$userId/store/$storeId"
    | "/user/$userId/store/$storeId/dashboard";
  id:
    | "__root__"
    | "/auth"
    | "/auth/_auth-layout"
    | "/(home)/"
    | "/auth/_auth-layout/forgot-password"
    | "/auth/_auth-layout/signin"
    | "/auth/_auth-layout/signup"
    | "/user/$userId"
    | "/user/$userId/_billing-layout"
    | "/user/$userId/_my-stores-layout"
    | "/user/$userId/_billing-layout/billing"
    | "/user/$userId/_my-stores-layout/my-stores"
    | "/user/$userId/store/$storeId"
    | "/user/$userId/store/$storeId/_store-layouts"
    | "/user/$userId/store/$storeId/_store-layouts/dashboard";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren;
  homeIndexRoute: typeof homeIndexRoute;
  UserUserIdRoute: typeof UserUserIdRouteWithChildren;
}
export interface FileServerRoutesByFullPath {
  "/api/oauth/signin/google": typeof ApiOauthSigninGoogleIndexServerRoute;
  "/api/oauth/signin/google/callback": typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}
export interface FileServerRoutesByTo {
  "/api/oauth/signin/google": typeof ApiOauthSigninGoogleIndexServerRoute;
  "/api/oauth/signin/google/callback": typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport;
  "/api/oauth/signin/google/": typeof ApiOauthSigninGoogleIndexServerRoute;
  "/api/oauth/signin/google/callback/": typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath;
  fullPaths: "/api/oauth/signin/google" | "/api/oauth/signin/google/callback";
  fileServerRoutesByTo: FileServerRoutesByTo;
  to: "/api/oauth/signin/google" | "/api/oauth/signin/google/callback";
  id:
    | "__root__"
    | "/api/oauth/signin/google/"
    | "/api/oauth/signin/google/callback/";
  fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
  ApiOauthSigninGoogleIndexServerRoute: typeof ApiOauthSigninGoogleIndexServerRoute;
  ApiOauthSigninGoogleCallbackIndexServerRoute: typeof ApiOauthSigninGoogleCallbackIndexServerRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/auth": {
      id: "/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/user/$userId": {
      id: "/user/$userId";
      path: "/user/$userId";
      fullPath: "/user/$userId";
      preLoaderRoute: typeof UserUserIdRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(home)/": {
      id: "/(home)/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof homeIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth/_auth-layout": {
      id: "/auth/_auth-layout";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthAuthLayoutRouteImport;
      parentRoute: typeof AuthRoute;
    };
    "/user/$userId/_my-stores-layout": {
      id: "/user/$userId/_my-stores-layout";
      path: "";
      fullPath: "/user/$userId";
      preLoaderRoute: typeof UserUserIdMyStoresLayoutRouteImport;
      parentRoute: typeof UserUserIdRoute;
    };
    "/user/$userId/_billing-layout": {
      id: "/user/$userId/_billing-layout";
      path: "/user/$userId";
      fullPath: "/user/$userId";
      preLoaderRoute: typeof UserUserIdBillingLayoutRouteImport;
      parentRoute: typeof UserUserIdRoute;
    };
    "/auth/_auth-layout/signup": {
      id: "/auth/_auth-layout/signup";
      path: "/signup";
      fullPath: "/auth/signup";
      preLoaderRoute: typeof AuthAuthLayoutSignupRouteImport;
      parentRoute: typeof AuthAuthLayoutRoute;
    };
    "/auth/_auth-layout/signin": {
      id: "/auth/_auth-layout/signin";
      path: "/signin";
      fullPath: "/auth/signin";
      preLoaderRoute: typeof AuthAuthLayoutSigninRouteImport;
      parentRoute: typeof AuthAuthLayoutRoute;
    };
    "/auth/_auth-layout/forgot-password": {
      id: "/auth/_auth-layout/forgot-password";
      path: "/forgot-password";
      fullPath: "/auth/forgot-password";
      preLoaderRoute: typeof AuthAuthLayoutForgotPasswordRouteImport;
      parentRoute: typeof AuthAuthLayoutRoute;
    };
    "/user/$userId/store/$storeId": {
      id: "/user/$userId/store/$storeId";
      path: "/store/$storeId";
      fullPath: "/user/$userId/store/$storeId";
      preLoaderRoute: typeof UserUserIdStoreStoreIdRouteImport;
      parentRoute: typeof UserUserIdRoute;
    };
    "/user/$userId/_my-stores-layout/my-stores": {
      id: "/user/$userId/_my-stores-layout/my-stores";
      path: "/my-stores";
      fullPath: "/user/$userId/my-stores";
      preLoaderRoute: typeof UserUserIdMyStoresLayoutMyStoresRouteImport;
      parentRoute: typeof UserUserIdMyStoresLayoutRoute;
    };
    "/user/$userId/_billing-layout/billing": {
      id: "/user/$userId/_billing-layout/billing";
      path: "/billing";
      fullPath: "/user/$userId/billing";
      preLoaderRoute: typeof UserUserIdBillingLayoutBillingRouteImport;
      parentRoute: typeof UserUserIdBillingLayoutRoute;
    };
    "/user/$userId/store/$storeId/_store-layouts": {
      id: "/user/$userId/store/$storeId/_store-layouts";
      path: "/store/$storeId";
      fullPath: "/user/$userId/store/$storeId";
      preLoaderRoute: typeof UserUserIdStoreStoreIdStoreLayoutsRouteImport;
      parentRoute: typeof UserUserIdStoreStoreIdRoute;
    };
    "/user/$userId/store/$storeId/_store-layouts/dashboard": {
      id: "/user/$userId/store/$storeId/_store-layouts/dashboard";
      path: "/dashboard";
      fullPath: "/user/$userId/store/$storeId/dashboard";
      preLoaderRoute: typeof UserUserIdStoreStoreIdStoreLayoutsDashboardRouteImport;
      parentRoute: typeof UserUserIdStoreStoreIdStoreLayoutsRoute;
    };
  }
}
declare module "@tanstack/react-start/server" {
  interface ServerFileRoutesByPath {
    "/api/oauth/signin/google/": {
      id: "/api/oauth/signin/google/";
      path: "/api/oauth/signin/google";
      fullPath: "/api/oauth/signin/google";
      preLoaderRoute: typeof ApiOauthSigninGoogleIndexServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/oauth/signin/google/callback/": {
      id: "/api/oauth/signin/google/callback/";
      path: "/api/oauth/signin/google/callback";
      fullPath: "/api/oauth/signin/google/callback";
      preLoaderRoute: typeof ApiOauthSigninGoogleCallbackIndexServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
  }
}

interface AuthAuthLayoutRouteChildren {
  AuthAuthLayoutForgotPasswordRoute: typeof AuthAuthLayoutForgotPasswordRoute;
  AuthAuthLayoutSigninRoute: typeof AuthAuthLayoutSigninRoute;
  AuthAuthLayoutSignupRoute: typeof AuthAuthLayoutSignupRoute;
}

const AuthAuthLayoutRouteChildren: AuthAuthLayoutRouteChildren = {
  AuthAuthLayoutForgotPasswordRoute: AuthAuthLayoutForgotPasswordRoute,
  AuthAuthLayoutSigninRoute: AuthAuthLayoutSigninRoute,
  AuthAuthLayoutSignupRoute: AuthAuthLayoutSignupRoute,
};

const AuthAuthLayoutRouteWithChildren = AuthAuthLayoutRoute._addFileChildren(
  AuthAuthLayoutRouteChildren,
);

interface AuthRouteChildren {
  AuthAuthLayoutRoute: typeof AuthAuthLayoutRouteWithChildren;
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLayoutRoute: AuthAuthLayoutRouteWithChildren,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

interface UserUserIdBillingLayoutRouteChildren {
  UserUserIdBillingLayoutBillingRoute: typeof UserUserIdBillingLayoutBillingRoute;
}

const UserUserIdBillingLayoutRouteChildren: UserUserIdBillingLayoutRouteChildren =
  {
    UserUserIdBillingLayoutBillingRoute: UserUserIdBillingLayoutBillingRoute,
  };

const UserUserIdBillingLayoutRouteWithChildren =
  UserUserIdBillingLayoutRoute._addFileChildren(
    UserUserIdBillingLayoutRouteChildren,
  );

interface UserUserIdMyStoresLayoutRouteChildren {
  UserUserIdMyStoresLayoutMyStoresRoute: typeof UserUserIdMyStoresLayoutMyStoresRoute;
}

const UserUserIdMyStoresLayoutRouteChildren: UserUserIdMyStoresLayoutRouteChildren =
  {
    UserUserIdMyStoresLayoutMyStoresRoute:
      UserUserIdMyStoresLayoutMyStoresRoute,
  };

const UserUserIdMyStoresLayoutRouteWithChildren =
  UserUserIdMyStoresLayoutRoute._addFileChildren(
    UserUserIdMyStoresLayoutRouteChildren,
  );

interface UserUserIdStoreStoreIdStoreLayoutsRouteChildren {
  UserUserIdStoreStoreIdStoreLayoutsDashboardRoute: typeof UserUserIdStoreStoreIdStoreLayoutsDashboardRoute;
}

const UserUserIdStoreStoreIdStoreLayoutsRouteChildren: UserUserIdStoreStoreIdStoreLayoutsRouteChildren =
  {
    UserUserIdStoreStoreIdStoreLayoutsDashboardRoute:
      UserUserIdStoreStoreIdStoreLayoutsDashboardRoute,
  };

const UserUserIdStoreStoreIdStoreLayoutsRouteWithChildren =
  UserUserIdStoreStoreIdStoreLayoutsRoute._addFileChildren(
    UserUserIdStoreStoreIdStoreLayoutsRouteChildren,
  );

interface UserUserIdStoreStoreIdRouteChildren {
  UserUserIdStoreStoreIdStoreLayoutsRoute: typeof UserUserIdStoreStoreIdStoreLayoutsRouteWithChildren;
}

const UserUserIdStoreStoreIdRouteChildren: UserUserIdStoreStoreIdRouteChildren =
  {
    UserUserIdStoreStoreIdStoreLayoutsRoute:
      UserUserIdStoreStoreIdStoreLayoutsRouteWithChildren,
  };

const UserUserIdStoreStoreIdRouteWithChildren =
  UserUserIdStoreStoreIdRoute._addFileChildren(
    UserUserIdStoreStoreIdRouteChildren,
  );

interface UserUserIdRouteChildren {
  UserUserIdBillingLayoutRoute: typeof UserUserIdBillingLayoutRouteWithChildren;
  UserUserIdMyStoresLayoutRoute: typeof UserUserIdMyStoresLayoutRouteWithChildren;
  UserUserIdStoreStoreIdRoute: typeof UserUserIdStoreStoreIdRouteWithChildren;
}

const UserUserIdRouteChildren: UserUserIdRouteChildren = {
  UserUserIdBillingLayoutRoute: UserUserIdBillingLayoutRouteWithChildren,
  UserUserIdMyStoresLayoutRoute: UserUserIdMyStoresLayoutRouteWithChildren,
  UserUserIdStoreStoreIdRoute: UserUserIdStoreStoreIdRouteWithChildren,
};

const UserUserIdRouteWithChildren = UserUserIdRoute._addFileChildren(
  UserUserIdRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  homeIndexRoute: homeIndexRoute,
  UserUserIdRoute: UserUserIdRouteWithChildren,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiOauthSigninGoogleIndexServerRoute: ApiOauthSigninGoogleIndexServerRoute,
  ApiOauthSigninGoogleCallbackIndexServerRoute:
    ApiOauthSigninGoogleCallbackIndexServerRoute,
};
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>();
